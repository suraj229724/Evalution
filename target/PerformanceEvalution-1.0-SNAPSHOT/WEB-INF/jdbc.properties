# To change this template, choose Tools | Templates
# and open the template in the editor.
######################################### MYSQL CONNECTION ##############################################################################
jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.username=performanceEvalu
jdbc.password=gfaWWaeT1J
jdbc.url.data=jdbc:mysql://localhost:3306/performance_evaluation?autoReconnect=true&useSSL=false

# The maximum number of active connections that can be allocated from this pool at the same time, or negative for no limit.  Default Rec : 8
jdbc.maxActive=10

# The maximum number of connections that can remain idle in the pool, without extra ones being released, or negative for no limit. Deafult Rec : 8
jdbc.maxIdle=10

# The maximum number of milliseconds that the pool will wait (when there are no available connections)
# for a connection to be returned before throwing an exception, or -1 to wait indefinitely. Default Rec : -1
jdbc.maxWait=-1

# The initial number of connections that are created when the pool is started.  Default Rec : 0
jdbc.initialSize=0

# Flag to remove abandoned connections if they exceed the removeAbandonedTimout.
# If set to true a connection is considered abandoned and eligible for removal
# if it has been idle longer than the removeAbandonedTimeout. Setting this to true
# can recover db connections from poorly written applications which fail to close
# a connection. Default Rec : false
jdbc.removeAbandoned=true

# Timeout in seconds before an abandoned connection can be removed. Default Rec : 300
jdbc.removeAbandonedTimeout=300

#Flag to log stack traces for application code which abandoned a Statement or Connection.
#Logging of abandoned Statements and Connections adds overhead for every Connection open
#or new Statement because a stack trace has to be generated.  Default Rec : false
jdbc.logAbandoned=false

#to solve login issue
jdbc.testOnReturn=true
jdbc.validationQuery=select 1
